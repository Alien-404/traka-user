openapi: 3.0.0
info:
  title: Traka pradita API
  description: |-
    Restfull api traka
  contact:
    email: rico@student.pradita.ac.id
  version: 1.0.0
servers:
  - url: https://traka.rinaru.com
    description: production server
tags:
  - name: Schedule
    description: Traka schedule
  - name: Notification
    description: Notification about traka
  - name: Traka
    description: Traka infromation data
paths:
  /schedule:
    get:
      tags:
        - Schedule
      summary: get schedules
      description: mengambil semua data schedule setiap station
      operationId: get-schedule-data
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/Schedules"

  /schedule/ongoing:
    get:
      tags:
        - Schedule
      summary: get ongoing schedule
      description: mengambil data schedule yang sedang berlangsung (berdasarkan jam server WIB)
      operationId: get-ongoing-schedule
      parameters:
        - in: query
          name: total
          schema:
            type: integer
            default: 10
          description: Jumlah data yang ingin ditampilkan
      responses:
        "200":
          description: Ok | sistem akan otomatis cek period dari server
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            period:
                              type: string
                              example: 06:00
                            notes:
                              type: string
                              example: null
                            station:
                              type: object
                              properties:
                                location:
                                  type: string
                                  example: ALLOGGIO
        "202":
          description: Accepted | sistem traka(driver) sedang offline
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      message:
                        example: traka is offline now!
                      data:
                        type: string
                        example: null

  /schedule/{route}:
    get:
      tags:
        - Schedule
      summary: get route schedule
      description: mengambil data schedule filter
      operationId: get-filter-schedule
      parameters:
        - in: path
          name: route
          description: filter route schedule (pradita, alloggio, or sdc_sqp_umn)
          required: true
          schema:
            type: string
            example: pradita
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          from:
                            type: object
                            properties:
                              uuid:
                                type: string
                                example: 9601758f-12e4-4886-84c6-09c17b255633
                              location:
                                type: string
                                example: ALLOGGIO
                              latitude:
                                type: number
                                example: -6.2671
                              longitude:
                                type: number
                                example: 106.605
                              schedule:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    period:
                                      type: string
                                      example: 06:00
                                    notes:
                                      type: string
                                      example: null
                          to:
                            type: object
                            properties:
                              uuid:
                                type: string
                                example: 9601758f-12e4-4886-84c6-09c17b255633
                              location:
                                type: string
                                example: PRADITA
                              latitude:
                                type: number
                                example: -6.2671
                              longitude:
                                type: number
                                example: 106.605
                              schedule:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    period:
                                      type: string
                                      example: 06:15
                                    notes:
                                      type: string
                                      example: null

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      message:
                        example: Bad request | please give params pradita, alloggio or sdc_sqp_umn!
                      status:
                        example: false
                      data:
                        type: string
                        example: null

  /notification:
    get:
      tags:
        - Notification
      summary: get notifications today
      description: mengambil semua data notifikasi traka hari ini
      operationId: get-notifications-data
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/Notifications"
    post:
      tags:
        - Notification
      summary: create notification
      description: membuat notofikasi dari supir / driver traka (butuh token)
      operationId: post-notification-data
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  example: TRAKA is broken
                message:
                  type: string
                  example: Mohon maaf atas ketidaknyamanannya, masalahnya akan segera diperbaiki.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                            example: 9601758f-12e4-4886-84c6-09c17b255633
                          topic:
                            type: string
                            example: TRAKA is broken
                          message:
                            type: string
                            example: Mohon maaf atas ketidaknyamanannya, masalahnya akan segera diperbaiki.
                          created_by:
                            type: string
                            example: driver-001
                          created_at:
                            type: string
                            example: 2023-05-08T07:57:22.386Z

        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                      message:
                        type: string
                        example: Bad request | please provide topic and message!
                      status:
                        type: boolean
                        default: false
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                      message:
                        type: string
                        example: Unauthorized | user does not have permission to create data!
                      status:
                        type: boolean
                        default: false

  /traka:
    get:
      tags:
        - Traka
      summary: get traka information
      description: mengambil data traka
      operationId: get-traka-data
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/Traka"

  /traka/status:
    put:
      tags:
        - Traka
      summary: update traka status
      description: update data status traka
      operationId: update-traka-status-data
      security:
        - Authorization: []
      responses:
        "202":
          description: Accepted | otomatis update dari status sekarang (jika false maka akan true dan sebaliknya)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      message:
                        example: Accepted | updated traka status
                      data:
                        oneOf:
                          - $ref: "#/components/schemas/Traka"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Wrapper"
                  - type: object
                    properties:
                      data:
                        type: string
                        example: null
                      message:
                        type: string
                        example: Unauthorized | user does not have permission to modified data!
                      status:
                        type: boolean
                        default: false

components:
  schemas:
    Wrapper:
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string
          example: success

    Schedules:
      type: array
      items:
        type: object
        properties:
          uuid:
            type: string
            example: 9601758f-12e4-4886-84c6-09c17b255633
          location:
            type: string
            example: ALLOGGIO
          latitude:
            type: number
            example: -6.2671
          longitude:
            type: number
            example: 106.605
          schedule:
            type: array
            items:
              type: object
              properties:
                period:
                  type: string
                  example: 06:00
                notes:
                  type: string
                  example: null

    Notifications:
      type: array
      items:
        type: object
        properties:
          uuid:
            type: string
            example: 9601758f-12e4-4886-84c6-09c17b255633
          topic:
            type: string
            example: TRAKA is broken
          message:
            type: string
            example: Mohon maaf atas ketidaknyamanannya, masalahnya akan segera diperbaiki.
          created_by:
            type: string
            example: driver-001
          created_at:
            type: string
            example: 2023-05-08T07:57:22.386Z

    Traka:
      type: object
      properties:
        uuid:
          type: string
          example: 9601758f-12e4-4886-84c6-09c17b255633
        name:
          type: string
          example: driver-001
        infromation:
          type: string
          example: traka driver 001
        status:
          type: boolean

  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
